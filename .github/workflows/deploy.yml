name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: false # This prevents treating warnings as errors
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          npm ci
          echo "Installing gh-pages..."
          npm install gh-pages --save-dev

      - name: List project files
        run: |
          echo "Current directory contents:"
          ls -la
          echo "Package.json contents:"
          cat package.json

      - name: Build
        env:
          PUBLIC_URL: "https://lucapagano10.github.io/crypto-dashboard"
          NODE_ENV: "production"
          REACT_APP_SUPABASE_URL: "https://nlwkruiwmlvayduwusny.supabase.co"
          REACT_APP_SUPABASE_ANON_KEY: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5sd2tydWl3bWx2YXlkdXd1c255Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDI5MTE2NDUsImV4cCI6MjA1ODQ4NzY0NX0.mhzRokTOohdTeVzA2Nk98hVy9V0hR7WGxhcC4AB1s5A"
        run: |
          echo "Starting build process..."
          npm run build || {
            echo "Build failed. Checking for errors..."
            echo "Node version:"
            node -v
            echo "NPM version:"
            npm -v
            echo "Directory contents:"
            ls -la
            exit 1
          }

      - name: Debug build output
        if: always()
        run: |
          echo "Workspace contents:"
          ls -la
          echo "Build directory contents (if exists):"
          ls -la build || echo "Build directory not found"
          echo "Node modules:"
          ls -la node_modules || echo "node_modules not found"

      - name: Upload artifact
        if: success()
        uses: actions/upload-pages-artifact@v3
        with:
          path: build

  deploy:
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
